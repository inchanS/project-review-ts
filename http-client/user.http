### 회원가입
< {%
    client.global.set("number", "5");
%}
POST {{url}}/users/signup
content-Type: application/json


{
  "nickname": "test nickname{{number}}",
  "email": "test{{number}}@test.com",
  "password": "testPassword{{number}}!"
}

<> 2023-02-13T173332.500.json
<> 2023-02-11T231813.500.json
<> 2023-02-10T030115.500.json
<> 2023-02-09T112110.500.json
<> 2023-01-21T001432.500.json
<> 2023-01-18T104906.500.json

### 닉네임 중복 확인
GET {{url}}/users/signup?nickname=test nickname{{number}}
Accept: application/json

### 로그인
POST {{url}}/users/signin
Content-Type: application/json

{
 "email" : "test{{number}}@test.com",
 "password": "testPassword{{number}}!"
}
> {%
client.test("Validate", function() { // Validate라는 이름의 테스트를 수행
client.assert(response.status === 200, "Response status is not 200"); // 응답값이 200이면 통과
client.assert(response.contentType.mimeType === "application/json", "Expected 'application/json'"); // 응답값이 application/json이면 통과
client.assert(response.body.result.token.trim().length > 0); // 토큰 길이가 0보다 크면 통과
});

client.log(response.body.result.token); // 토큰 값 로깅, body에는 응답받은 json이 객체 형식으로 저장된다. 즉 { accessToken:"value" }가 응답이라면, 여기선 value라 로깅된다.
client.global.set("token",response.body.result.token) // 토큰 값을 global 변수에 set
%}

### 내 정보 확인
GET {{url}}/users/getme
Content-Type: application/json
Authorization: Bearer {{token}}

